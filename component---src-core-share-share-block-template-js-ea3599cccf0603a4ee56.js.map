{"version":3,"sources":["webpack:///./src/core/share/ShareBlockTemplate.js","webpack:///./src/core/blocks/blockHelpers.js","webpack:///./src/core/components/Debug.js","webpack:///./src/core/pages/PageMetaDebug.js","webpack:///./node_modules/remove-markdown/index.js","webpack:///./src/core/pages/PageMeta.js"],"names":["ShareBlockTemplate","render","_this$props","this","props","pageContext","location","context","mergePageContext","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_pages_pageContext__WEBPACK_IMPORTED_MODULE_7__","value","_i18n_i18nContext__WEBPACK_IMPORTED_MODULE_8__","_i18n_Trans__WEBPACK_IMPORTED_MODULE_9__","translate","overrides","title","getBlockTitle","block","format","description","getBlockDescription","isMarkdownEnabled","className","_pages_PageMeta__WEBPACK_IMPORTED_MODULE_5__","_pages_PageMetaDebug__WEBPACK_IMPORTED_MODULE_6__","isDebugEnabled","_reach_router__WEBPACK_IMPORTED_MODULE_2__","to","redirect","noThrow","Component","id","_temp","_ref","_ref$format","_ref$values","values","blockTitle","Object","assign","getTranslationValuesFromContext","getPageLabel","_temp2","_ref2","_ref2$isMarkdownEnabl","_ref2$values","removeMarkdown","getBlockMeta","link","host","basePath","trackingId","replace","twitterText","emailSubject","emailBody","Debug","data","react__WEBPACK_IMPORTED_MODULE_5___default","style","marginBottom","fontSize","keys","map","key","undefined","indexOf","href","propTypes","PropTypes","string","isRequired","object","PageMetaDebug","_ref$overrides","react__WEBPACK_IMPORTED_MODULE_3___default","_pages_pageContext__WEBPACK_IMPORTED_MODULE_4__","_i18n_Trans__WEBPACK_IMPORTED_MODULE_5__","metaObject","getPageSocialMeta","reduce","acc","meta","_Object$assign","property","name","content","_components_Debug__WEBPACK_IMPORTED_MODULE_6__","module","exports","md","options","listUnicodeChar","hasOwnProperty","stripListLeaders","gfm","useImgAltText","output","e","console","error","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_helmet__WEBPACK_IMPORTED_MODULE_1__","react_helmet__WEBPACK_IMPORTED_MODULE_1___default","_pageContext__WEBPACK_IMPORTED_MODULE_2__","_i18n_Trans__WEBPACK_IMPORTED_MODULE_3__","_pageHelpers__WEBPACK_IMPORTED_MODULE_4__","PageMeta"],"mappings":"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","file":"component---src-core-share-share-block-template-js-ea3599cccf0603a4ee56.js","sourcesContent":["import React, { Component } from 'react'\nimport { Redirect } from '@reach/router'\nimport { getBlockTitle, getBlockDescription } from '../blocks/blockHelpers'\nimport { mergePageContext } from '../pages/pageHelpers'\nimport PageMeta from '../pages/PageMeta'\nimport PageMetaDebug from '../pages/PageMetaDebug'\nimport { PageContextProvider } from '../pages/pageContext'\nimport { I18nContextProvider } from '../i18n/i18nContext'\nimport Trans from '../i18n/Trans'\n\nexport default class ShareBlockTemplate extends Component {\n    render() {\n        const { pageContext, location } = this.props\n        const context = mergePageContext(pageContext, location)\n\n        return (\n            <PageContextProvider value={context}>\n                <I18nContextProvider>\n                    <Trans>\n                        {translate => {\n                            const overrides = {\n                                title: `${getBlockTitle(context.block, context, translate, {\n                                    format: 'full'\n                                })} #StateOfJS`,\n                                description: getBlockDescription(\n                                    context.block,\n                                    context,\n                                    translate,\n                                    {\n                                        isMarkdownEnabled: false\n                                    }\n                                )\n                            }\n\n                            return (\n                                <div className=\"template\">\n                                    <PageMeta overrides={overrides} />\n                                    <PageMetaDebug overrides={overrides} />\n                                    {!context.isDebugEnabled && (\n                                        <Redirect to={context.redirect} noThrow />\n                                    )}\n                                    Redirectingâ€¦\n                                </div>\n                            )\n                        }}\n                    </Trans>\n                </I18nContextProvider>\n            </PageContextProvider>\n        )\n    }\n}\n","import removeMarkdown from 'remove-markdown'\nimport { getTranslationValuesFromContext, getPageLabel } from '../pages/pageHelpers'\n\nexport const getBlockTitle = (id, context, translate, { format = 'short', values = {} } = {}) => {\n    let blockTitle = translate(`block.title.${id}`, {\n        values: {\n            ...getTranslationValuesFromContext(context, translate),\n            ...values\n        }\n    })\n\n    if (format === 'full') {\n        const pageLabel = getPageLabel(context, translate)\n        blockTitle = `${pageLabel} - ${blockTitle}`\n    }\n\n    return blockTitle\n}\n\nexport const getBlockDescription = (\n    id,\n    context,\n    translate,\n    { isMarkdownEnabled = true, values = {} } = {}\n) => {\n    let description = translate(`block.description.${id}`, {\n        values: {\n            ...getTranslationValuesFromContext(context, translate),\n            ...values\n        }\n    })\n    if (isMarkdownEnabled !== true) {\n        description = removeMarkdown(description)\n    }\n\n    return description\n}\n\nexport const getBlockMeta = (id, context, translate) => {\n    const link = `${context.host}${context.basePath}${id}`\n    const trackingId = `${context.basePath}${id}`.replace(/^\\//, '')\n    const title = getBlockTitle(id, context, translate)\n\n    const twitterText = translate('share.block.twitter_text', {\n        values: {\n            title,\n            link\n        }\n    })\n\n    const emailSubject = translate('share.block.subject')\n    const emailBody = translate('share.block.body', {\n        values: {\n            title,\n            link\n        }\n    })\n\n    return {\n        link,\n        trackingId,\n        title,\n        twitterText,\n        emailSubject,\n        emailBody\n    }\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst Debug = ({ title, data }) => (\n    <div style={{ marginBottom: 20 }}>\n        <div>[debug] {title}</div>\n        <div style={{ fontSize: '12px' }}>\n            {Object.keys(data).map(key => {\n                let value = data[key]\n                if (value !== undefined && value.indexOf('http') === 0) {\n                    value = <a href={value}>{value}</a>\n                }\n                return (\n                    <div key={key}>\n                        {key}: {value === undefined ? <i>undefined</i> : <strong>{value}</strong>}\n                    </div>\n                )\n            })}\n        </div>\n    </div>\n)\n\nDebug.propTypes = {\n    title: PropTypes.string.isRequired,\n    data: PropTypes.object.isRequired\n}\n\nexport default Debug\n","import React from 'react'\nimport { PageContextConsumer } from '../pages/pageContext'\nimport Trans from '../i18n/Trans'\nimport Debug from '../components/Debug'\nimport { getPageSocialMeta } from './pageHelpers'\n\nconst PageMetaDebug = ({ overrides = {} }) => (\n    <PageContextConsumer>\n        {context => {\n            if (!context.isDebugEnabled) return null\n\n            return (\n                <Trans>\n                    {translate => {\n                        const meta = getPageSocialMeta(context, translate, overrides)\n\n                        const metaObject = meta.reduce((acc, meta) => {\n                            const key = meta.property || meta.name\n\n                            return {\n                                ...acc,\n                                [key]: meta.content\n                            }\n                        }, {})\n\n                        return <Debug title=\"Page meta\" data={metaObject} />\n                    }}\n                </Trans>\n            )\n        }}\n    </PageContextConsumer>\n)\n\nexport default PageMetaDebug\n","module.exports = function(md, options) {\n  options = options || {};\n  options.listUnicodeChar = options.hasOwnProperty('listUnicodeChar') ? options.listUnicodeChar : false;\n  options.stripListLeaders = options.hasOwnProperty('stripListLeaders') ? options.stripListLeaders : true;\n  options.gfm = options.hasOwnProperty('gfm') ? options.gfm : true;\n  options.useImgAltText = options.hasOwnProperty('useImgAltText') ? options.useImgAltText : true;\n\n  var output = md || '';\n\n  // Remove horizontal rules (stripListHeaders conflict with this rule, which is why it has been moved to the top)\n  output = output.replace(/^(-\\s*?|\\*\\s*?|_\\s*?){3,}\\s*$/gm, '');\n\n  try {\n    if (options.stripListLeaders) {\n      if (options.listUnicodeChar)\n        output = output.replace(/^([\\s\\t]*)([\\*\\-\\+]|\\d+\\.)\\s+/gm, options.listUnicodeChar + ' $1');\n      else\n        output = output.replace(/^([\\s\\t]*)([\\*\\-\\+]|\\d+\\.)\\s+/gm, '$1');\n    }\n    if (options.gfm) {\n      output = output\n        // Header\n        .replace(/\\n={2,}/g, '\\n')\n        // Fenced codeblocks\n        .replace(/~{3}.*\\n/g, '')\n        // Strikethrough\n        .replace(/~~/g, '')\n        // Fenced codeblocks\n        .replace(/`{3}.*\\n/g, '');\n    }\n    output = output\n      // Remove HTML tags\n      .replace(/<[^>]*>/g, '')\n      // Remove setext-style headers\n      .replace(/^[=\\-]{2,}\\s*$/g, '')\n      // Remove footnotes?\n      .replace(/\\[\\^.+?\\](\\: .*?$)?/g, '')\n      .replace(/\\s{0,2}\\[.*?\\]: .*?$/g, '')\n      // Remove images\n      .replace(/\\!\\[(.*?)\\][\\[\\(].*?[\\]\\)]/g, options.useImgAltText ? '$1' : '')\n      // Remove inline links\n      .replace(/\\[(.*?)\\][\\[\\(].*?[\\]\\)]/g, '$1')\n      // Remove blockquotes\n      .replace(/^\\s{0,3}>\\s?/g, '')\n      // Remove reference-style links?\n      .replace(/^\\s{1,2}\\[(.*?)\\]: (\\S+)( \".*?\")?\\s*$/g, '')\n      // Remove atx-style headers\n      .replace(/^(\\n)?\\s{0,}#{1,6}\\s+| {0,}(\\n)?\\s{0,}#{0,} {0,}(\\n)?\\s{0,}$/gm, '$1$2$3')\n      // Remove emphasis (repeat the line to remove double emphasis)\n      .replace(/([\\*_]{1,3})(\\S.*?\\S{0,1})\\1/g, '$2')\n      .replace(/([\\*_]{1,3})(\\S.*?\\S{0,1})\\1/g, '$2')\n      // Remove code blocks\n      .replace(/(`{3,})(.*?)\\1/gm, '$2')\n      // Remove inline code\n      .replace(/`(.+?)`/g, '$1')\n      // Replace two or more newlines with exactly two? Not entirely sure this belongs here...\n      .replace(/\\n{2,}/g, '\\n\\n');\n  } catch(e) {\n    console.error(e);\n    return md;\n  }\n  return output;\n};\n","import React, { Fragment } from 'react'\nimport Helmet from 'react-helmet'\n// import getImageUrl from '../../helpers/getImageUrl'\nimport { PageContextConsumer } from './pageContext'\nimport Trans from '../i18n/Trans'\nimport { getPageSocialMeta } from './pageHelpers'\n\nconst PageMeta = ({ overrides = {} }) => (\n    <PageContextConsumer>\n        {context => (\n            <Trans>\n                {translate => {\n                    const meta = getPageSocialMeta(context, translate, overrides)\n\n                    return (\n                        <Fragment>\n                            <Helmet meta={meta} />\n                        </Fragment>\n                    )\n                }}\n            </Trans>\n        )}\n    </PageContextConsumer>\n)\n\nexport default PageMeta\n"],"sourceRoot":""}